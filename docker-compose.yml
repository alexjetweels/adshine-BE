version: '3.8'
services:
  core:
    container_name: weather-core
    build:
      context: .
      dockerfile: ./apps/core/Dockerfile
    env_file:
      - ./apps/core/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: 'yarn start:core:prod'
    restart: unless-stopped
  scheduler:
    container_name: weather-scheduler
    build:
      context: .
      dockerfile: ./apps/scheduler/Dockerfile
    env_file:
      - ./apps/scheduler/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: 'yarn start:scheduler:prod'
    restart: unless-stopped
  bot:
    container_name: weather-bot
    build:
      context: .
      dockerfile: ./apps/bot/Dockerfile
    env_file:
      - ./apps/bot/.env
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: 'yarn start:bot:prod'
    restart: unless-stopped
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=weather-miners-core
    ports:
      - '5434:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
